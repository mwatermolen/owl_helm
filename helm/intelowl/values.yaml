# Default values for intelowl.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# KUBERNETES STUFF
INGRESS_FQDN: ""
TLS_SECRET_NAME: ""
INTELOWL_IMAGE: ""
NGINX_DOCKER_IMAGE: ""
CELERY_WORKER_IMAGE: ""
CELERY_BEAT_IMAGE: ""
RABBITMQ_IMAGE: "rabbitmq:latest"
POSTGRES_IMAGE: "postgres:10.4"
REPLICAS: 1


### INTEL OWL CONFIG
DJANGO_SECRET: <DJANGO_SECRET>
DB_HOST: "postgres-svc"
DB_PORT: 5432
DB_USER: "intelowl"
DB_PASSWORD: "intelowl"
DB_NAME: "intel_owl_db"
# Additional Config variables
# jobs older than this would be flushed from the database periodically. Default: 3 days
OLD_JOBS_RETENTION_DAYS: 3
# IntelOwl's API token will expire if unused for how many days ? Default: 7 days
PYINTELOWL_TOKEN_LIFETIME: 7
# Optional API keys
SHODAN_KEY: ""
ABUSEIPDB_KEY: ""
AUTH0_KEY: ""
SECURITYTRAILS_KEY: ""
GSF_KEY: ""
OTX_KEY: ""
CIRCL_CREDENTIALS: "user|pass"
VT_KEY: ""
HA_KEY: ""
INTEZER_KEY: ""
FIRST_MISP_API: ""
MISP_KEY: ""
MAXMIND_KEY: ""
DNSDB_KEY: ""
HONEYDB_API_ID: ""
HONEYDB_API_KEY: ""
HUNTER_API_KEY: ""
CENSYS_API_ID: ""
CENSYS_API_SECRET: ""
ONYPHE_KEY: ""
GREYNOISE_API_KEY: ""
# Test tokens
TEST_JOB_ID: 1
TEST_IP: 8.8.8.8
TEST_DOMAIN: www.google.com
TEST_URL: https://www.google.com/search?test
TEST_MD5: 446c5fbb11b9ce058450555c1c27153c
# URLs
CUCKOO_URL: ""
MISP_URL: ""
FIRST_MISP_URL: ""
VT_NOTIFY_URL: ""
# other variables
DEBUG: "False"
DISABLE_LOGGING_TEST: "False"
MOCK_CONNECTIONS: "False"
CELERY_BROKER_URL: "amqp://guest:guest@backend-rabbitmq:5672"
HTTPS_ENABLED: "not_enabled"
AWS_SECRETS: "False"
AWS_SQS: "False"
AWS_REGION: eu-central-1